/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Raffle, RaffleInterface } from "../Raffle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_vrfKeyHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_linkFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_winnerIdx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_list",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_listSize",
        type: "uint256",
      },
    ],
    name: "Finalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "winner",
        type: "uint256",
      },
    ],
    name: "WinnerDrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_winner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_winnerIdx",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "draw",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "drawn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_list",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_listSize",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "initWithNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "linkFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "list",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_participant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "merkleLeafForListItem",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001dc838038062001dc8833981810160405281019062000038919062000109565b83828173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050508260c081815250508060e08181525050505050506200020b565b600081519050620000d581620001bd565b92915050565b600081519050620000ec81620001d7565b92915050565b6000815190506200010381620001f1565b92915050565b600080600080608085870312156200012057600080fd5b60006200013087828801620000c4565b94505060206200014387828801620000db565b93505060406200015687828801620000c4565b92505060606200016987828801620000f2565b91505092959194509250565b6000620001828262000193565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620001c88162000175565b8114620001d457600080fd5b50565b620001e28162000189565b8114620001ee57600080fd5b50565b620001fc81620001b3565b81146200020857600080fd5b50565b60805160601c60a05160601c60c05160e051611b61620002676000396000818161030301528181610456015261054f0152600061052e0152600081816109670152610b5b0152600081816104770152610b1f0152611b616000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806394985ddd11610097578063e9812d7111610066578063e9812d711461028b578063f851a440146102a7578063fc0c546a146102c5578063fd915ef2146102e357610100565b806394985ddd14610215578063972c535614610231578063af640d0f1461024f578063dfbf53ae1461026d57610100565b80630f560cd7116100d35780630f560cd71461018f578063150b7a02146101ad5780633d13f874146101dd5780635178db3d146101f957610100565b8063018896111461010557806306fd2e7a1461012357806306fdde03146101535780630eecae2114610171575b600080fd5b61010d610301565b60405161011a9190611678565b60405180910390f35b61013d600480360381019061013891906111ac565b610325565b60405161014a9190611572565b60405180910390f35b61015b610358565b6040516101689190611616565b60405180910390f35b6101796103e6565b6040516101869190611572565b60405180910390f35b610197610578565b6040516101a49190611572565b60405180910390f35b6101c760048036038101906101c291906110b6565b61057e565b6040516101d491906115fb565b60405180910390f35b6101f760048036038101906101f291906111e8565b610592565b005b610213600480360381019061020e9190611131565b61071f565b005b61022f600480360381019061022a919061127d565b610965565b005b610239610a01565b6040516102469190611678565b60405180910390f35b610257610a07565b6040516102649190611678565b60405180910390f35b610275610a0d565b6040516102829190611678565b60405180910390f35b6102a560048036038101906102a0919061127d565b610a13565b005b6102af610abc565b6040516102bc9190611482565b60405180910390f35b6102cd610ae2565b6040516102da9190611482565b60405180910390f35b6102eb610b08565b6040516102f89190611557565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6000828260405160200161033a92919061142a565b60405160208183030381529060405280519060200120905092915050565b6004805461036590611868565b80601f016020809104026020016040519081016040528092919081815260200182805461039190611868565b80156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b505050505081565b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044257600080fd5b6000801b600554141561045457600080fd5b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104ce9190611482565b60206040518083038186803b1580156104e657600080fd5b505afa1580156104fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051e91906112b9565b101561052957600080fd5b6105737f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610b1b565b905090565b60055481565b600063150b7a0260e01b9050949350505050565b600860009054906101000a900460ff166105ab57600080fd5b60006105b78585610325565b90506000610609848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060055484610c7a565b90508061061557600080fd5b600754851461062357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e30886003546040518463ffffffff1660e01b81526004016106849392919061149d565b600060405180830381600087803b15801561069e57600080fd5b505af11580156106b2573d6000803e3d6000fd5b505050507f8dab6d35466ca3cba614bc5b262979b277949786977e81107f375f7e39f7734a8686600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660035460405161070f94939291906114d4565b60405180910390a1505050505050565b60018054906101000a900460ff1661074757600160009054906101000a900460ff1615610750565b61074f610c91565b5b61078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690611638565b60405180910390fd5b600060018054906101000a900460ff1615905080156107dd5760018060016101000a81548160ff02191690831515021790555060018060006101000a81548160ff0219169083151502179055505b84600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600381905550816004908051906020019061087c929190610e52565b503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016108cd9190611678565b60206040518083038186803b1580156108e557600080fd5b505afa1580156108f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091d919061108d565b73ffffffffffffffffffffffffffffffffffffffff161461093d57600080fd5b801561095e5760006001806101000a81548160ff0219169083151502179055505b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ea90611658565b60405180910390fd5b6109fd8282610ca2565b5050565b60065481565b60035481565b60075481565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a6d57600080fd5b81600581905550806006819055507fdc254c2f4c0256f1dbcdc461e17730da5bb7b777632b4f0cf574121de971c67b600554600654604051610ab092919061158d565b60405180910390a15050565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900460ff1681565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610b8f92919061158d565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610bbc93929190611519565b602060405180830381600087803b158015610bd657600080fd5b505af1158015610bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0e9190611254565b506000610c308460003060008089815260200190815260200160002054610d0e565b9050600160008086815260200190815260200160002054610c519190611752565b60008086815260200190815260200160002081905550610c718482610d4a565b91505092915050565b600082610c878584610d7d565b1490509392505050565b6000610c9c30610e18565b15905090565b60065481610cb0919061194c565b6007819055506001600860006101000a81548160ff0219169083151502179055507fb042a90651658833ced064b7e52c96f0dbcb36278e6dac9c37178e6612b9ed4e600754604051610d029190611678565b60405180910390a15050565b600084848484604051602001610d2794939291906115b6565b6040516020818303038152906040528051906020012060001c9050949350505050565b60008282604051602001610d5f929190611456565b60405160208183030381529060405280519060200120905092915050565b60008082905060005b8451811015610e0d576000858281518110610dca577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050808311610dec57610de58382610e3b565b9250610df9565b610df68184610e3b565b92505b508080610e05906118cb565b915050610d86565b508091505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082600052816020526040600020905092915050565b828054610e5e90611868565b90600052602060002090601f016020900481019282610e805760008555610ec7565b82601f10610e9957805160ff1916838001178555610ec7565b82800160010185558215610ec7579182015b82811115610ec6578251825591602001919060010190610eab565b5b509050610ed49190610ed8565b5090565b5b80821115610ef1576000816000905550600101610ed9565b5090565b6000610f08610f03846116b8565b611693565b905082815260208101848484011115610f2057600080fd5b610f2b848285611826565b509392505050565b6000610f46610f41846116e9565b611693565b905082815260208101848484011115610f5e57600080fd5b610f69848285611826565b509392505050565b600081359050610f8081611acf565b92915050565b600081519050610f9581611acf565b92915050565b60008083601f840112610fad57600080fd5b8235905067ffffffffffffffff811115610fc657600080fd5b602083019150836020820283011115610fde57600080fd5b9250929050565b600081519050610ff481611ae6565b92915050565b60008135905061100981611afd565b92915050565b600082601f83011261102057600080fd5b8135611030848260208601610ef5565b91505092915050565b600082601f83011261104a57600080fd5b813561105a848260208601610f33565b91505092915050565b60008135905061107281611b14565b92915050565b60008151905061108781611b14565b92915050565b60006020828403121561109f57600080fd5b60006110ad84828501610f86565b91505092915050565b600080600080608085870312156110cc57600080fd5b60006110da87828801610f71565b94505060206110eb87828801610f71565b93505060406110fc87828801611063565b925050606085013567ffffffffffffffff81111561111957600080fd5b6111258782880161100f565b91505092959194509250565b6000806000806080858703121561114757600080fd5b600061115587828801610f71565b945050602061116687828801610f71565b935050604061117787828801611063565b925050606085013567ffffffffffffffff81111561119457600080fd5b6111a087828801611039565b91505092959194509250565b600080604083850312156111bf57600080fd5b60006111cd85828601610f71565b92505060206111de85828601611063565b9150509250929050565b600080600080606085870312156111fe57600080fd5b600061120c87828801610f71565b945050602061121d87828801611063565b935050604085013567ffffffffffffffff81111561123a57600080fd5b61124687828801610f9b565b925092505092959194509250565b60006020828403121561126657600080fd5b600061127484828501610fe5565b91505092915050565b6000806040838503121561129057600080fd5b600061129e85828601610ffa565b92505060206112af85828601611063565b9150509250929050565b6000602082840312156112cb57600080fd5b60006112d984828501611078565b91505092915050565b6112eb816117a8565b82525050565b6113026112fd826117a8565b611914565b82525050565b611311816117ba565b82525050565b611320816117c6565b82525050565b611337611332826117c6565b611926565b82525050565b611346816117d0565b82525050565b60006113578261171a565b6113618185611730565b9350611371818560208601611835565b61137a81611a39565b840191505092915050565b600061139082611725565b61139a8185611741565b93506113aa818560208601611835565b6113b381611a39565b840191505092915050565b60006113cb602e83611741565b91506113d682611a57565b604082019050919050565b60006113ee601f83611741565b91506113f982611aa6565b602082019050919050565b61140d8161181c565b82525050565b61142461141f8261181c565b611942565b82525050565b600061143682856112f1565b6014820191506114468284611413565b6020820191508190509392505050565b60006114628285611326565b6020820191506114728284611413565b6020820191508190509392505050565b600060208201905061149760008301846112e2565b92915050565b60006060820190506114b260008301866112e2565b6114bf60208301856112e2565b6114cc6040830184611404565b949350505050565b60006080820190506114e960008301876112e2565b6114f66020830186611404565b61150360408301856112e2565b6115106060830184611404565b95945050505050565b600060608201905061152e60008301866112e2565b61153b6020830185611404565b818103604083015261154d818461134c565b9050949350505050565b600060208201905061156c6000830184611308565b92915050565b60006020820190506115876000830184611317565b92915050565b60006040820190506115a26000830185611317565b6115af6020830184611404565b9392505050565b60006080820190506115cb6000830187611317565b6115d86020830186611404565b6115e560408301856112e2565b6115f26060830184611404565b95945050505050565b6000602082019050611610600083018461133d565b92915050565b600060208201905081810360008301526116308184611385565b905092915050565b60006020820190508181036000830152611651816113be565b9050919050565b60006020820190508181036000830152611671816113e1565b9050919050565b600060208201905061168d6000830184611404565b92915050565b600061169d6116ae565b90506116a9828261189a565b919050565b6000604051905090565b600067ffffffffffffffff8211156116d3576116d2611a0a565b5b6116dc82611a39565b9050602081019050919050565b600067ffffffffffffffff82111561170457611703611a0a565b5b61170d82611a39565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061175d8261181c565b91506117688361181c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561179d5761179c61197d565b5b828201905092915050565b60006117b3826117fc565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611853578082015181840152602081019050611838565b83811115611862576000848401525b50505050565b6000600282049050600182168061188057607f821691505b60208210811415611894576118936119db565b5b50919050565b6118a382611a39565b810181811067ffffffffffffffff821117156118c2576118c1611a0a565b5b80604052505050565b60006118d68261181c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156119095761190861197d565b5b600182019050919050565b600061191f82611930565b9050919050565b6000819050919050565b600061193b82611a4a565b9050919050565b6000819050919050565b60006119578261181c565b91506119628361181c565b925082611972576119716119ac565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00600082015250565b611ad8816117a8565b8114611ae357600080fd5b50565b611aef816117ba565b8114611afa57600080fd5b50565b611b06816117c6565b8114611b1157600080fd5b50565b611b1d8161181c565b8114611b2857600080fd5b5056fea2646970667358221220c73e143688e4ac28eda9bbe7d70341030552e9eb92ddd625881f46c90aa11e9264736f6c63430008040033";

export class Raffle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vrfCoordinator: string,
    _vrfKeyHash: BytesLike,
    _linkToken: string,
    _linkFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Raffle> {
    return super.deploy(
      _vrfCoordinator,
      _vrfKeyHash,
      _linkToken,
      _linkFee,
      overrides || {}
    ) as Promise<Raffle>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _vrfKeyHash: BytesLike,
    _linkToken: string,
    _linkFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _vrfKeyHash,
      _linkToken,
      _linkFee,
      overrides || {}
    );
  }
  attach(address: string): Raffle {
    return super.attach(address) as Raffle;
  }
  connect(signer: Signer): Raffle__factory {
    return super.connect(signer) as Raffle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RaffleInterface {
    return new utils.Interface(_abi) as RaffleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Raffle {
    return new Contract(address, _abi, signerOrProvider) as Raffle;
  }
}
