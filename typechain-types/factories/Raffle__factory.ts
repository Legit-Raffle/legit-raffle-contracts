/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Raffle, RaffleInterface } from "../Raffle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_vrfKeyHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_linkFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_winner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_winnerIdx",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "draw",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "drawn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_list",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_listSize",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "initWithNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "linkFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "list",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_participant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "merkleLeafForListItem",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001cac38038062001cac833981810160405281019062000038919062000109565b83828173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050508260c081815250508060e08181525050505050506200020b565b600081519050620000d581620001bd565b92915050565b600081519050620000ec81620001d7565b92915050565b6000815190506200010381620001f1565b92915050565b600080600080608085870312156200012057600080fd5b60006200013087828801620000c4565b94505060206200014387828801620000db565b93505060406200015687828801620000c4565b92505060606200016987828801620000f2565b91505092959194509250565b6000620001828262000193565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620001c88162000175565b8114620001d457600080fd5b50565b620001e28162000189565b8114620001ee57600080fd5b50565b620001fc81620001b3565b81146200020857600080fd5b50565b60805160601c60a05160601c60c05160e051611a45620002676000396000818161030301528181610456015261054f0152600061052e0152600081816109060152610abd0152600081816104770152610a810152611a456000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806394985ddd11610097578063e9812d7111610066578063e9812d711461028b578063f851a440146102a7578063fc0c546a146102c5578063fd915ef2146102e357610100565b806394985ddd14610215578063972c535614610231578063af640d0f1461024f578063dfbf53ae1461026d57610100565b80630f560cd7116100d35780630f560cd71461018f578063150b7a02146101ad5780633d13f874146101dd5780635178db3d146101f957610100565b8063018896111461010557806306fd2e7a1461012357806306fdde03146101535780630eecae2114610171575b600080fd5b61010d610301565b60405161011a919061155c565b60405180910390f35b61013d600480360381019061013891906110d5565b610325565b60405161014a9190611456565b60405180910390f35b61015b610358565b60405161016891906114fa565b60405180910390f35b6101796103e6565b6040516101869190611456565b60405180910390f35b610197610578565b6040516101a49190611456565b60405180910390f35b6101c760048036038101906101c29190610fdf565b61057e565b6040516101d491906114df565b60405180910390f35b6101f760048036038101906101f29190611111565b610592565b005b610213600480360381019061020e919061105a565b6106be565b005b61022f600480360381019061022a91906111a6565b610904565b005b6102396109a0565b604051610246919061155c565b60405180910390f35b6102576109a6565b604051610264919061155c565b60405180910390f35b6102756109ac565b604051610282919061155c565b60405180910390f35b6102a560048036038101906102a091906111a6565b6109b2565b005b6102af610a1e565b6040516102bc91906113ab565b60405180910390f35b6102cd610a44565b6040516102da91906113ab565b60405180910390f35b6102eb610a6a565b6040516102f8919061143b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6000828260405160200161033a929190611353565b60405160208183030381529060405280519060200120905092915050565b600480546103659061174c565b80601f01602080910402602001604051908101604052809291908181526020018280546103919061174c565b80156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b505050505081565b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044257600080fd5b6000801b600554141561045457600080fd5b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104ce91906113ab565b60206040518083038186803b1580156104e657600080fd5b505afa1580156104fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051e91906111e2565b101561052957600080fd5b6105737f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a7d565b905090565b60055481565b600063150b7a0260e01b9050949350505050565b600860009054906101000a900460ff166105ab57600080fd5b60006105b78585610325565b90506000610609848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060055484610bdc565b90508061061557600080fd5b600754851461062357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e30886003546040518463ffffffff1660e01b8152600401610684939291906113c6565b600060405180830381600087803b15801561069e57600080fd5b505af11580156106b2573d6000803e3d6000fd5b50505050505050505050565b60018054906101000a900460ff166106e657600160009054906101000a900460ff16156106ef565b6106ee610bf3565b5b61072e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107259061151c565b60405180910390fd5b600060018054906101000a900460ff16159050801561077c5760018060016101000a81548160ff02191690831515021790555060018060006101000a81548160ff0219169083151502179055505b84600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600381905550816004908051906020019061081b929190610d7b565b503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161086c919061155c565b60206040518083038186803b15801561088457600080fd5b505afa158015610898573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bc9190610fb6565b73ffffffffffffffffffffffffffffffffffffffff16146108dc57600080fd5b80156108fd5760006001806101000a81548160ff0219169083151502179055505b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610992576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109899061153c565b60405180910390fd5b61099c8282610c04565b5050565b60065481565b60035481565b60075481565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a0c57600080fd5b81600581905550806006819055505050565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900460ff1681565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610af1929190611471565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610b1e939291906113fd565b602060405180830381600087803b158015610b3857600080fd5b505af1158015610b4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b70919061117d565b506000610b928460003060008089815260200190815260200160002054610c37565b9050600160008086815260200190815260200160002054610bb39190611636565b60008086815260200190815260200160002081905550610bd38482610c73565b91505092915050565b600082610be98584610ca6565b1490509392505050565b6000610bfe30610d41565b15905090565b60065481610c129190611830565b6007819055506001600860006101000a81548160ff0219169083151502179055505050565b600084848484604051602001610c50949392919061149a565b6040516020818303038152906040528051906020012060001c9050949350505050565b60008282604051602001610c8892919061137f565b60405160208183030381529060405280519060200120905092915050565b60008082905060005b8451811015610d36576000858281518110610cf3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050808311610d1557610d0e8382610d64565b9250610d22565b610d1f8184610d64565b92505b508080610d2e906117af565b915050610caf565b508091505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082600052816020526040600020905092915050565b828054610d879061174c565b90600052602060002090601f016020900481019282610da95760008555610df0565b82601f10610dc257805160ff1916838001178555610df0565b82800160010185558215610df0579182015b82811115610def578251825591602001919060010190610dd4565b5b509050610dfd9190610e01565b5090565b5b80821115610e1a576000816000905550600101610e02565b5090565b6000610e31610e2c8461159c565b611577565b905082815260208101848484011115610e4957600080fd5b610e5484828561170a565b509392505050565b6000610e6f610e6a846115cd565b611577565b905082815260208101848484011115610e8757600080fd5b610e9284828561170a565b509392505050565b600081359050610ea9816119b3565b92915050565b600081519050610ebe816119b3565b92915050565b60008083601f840112610ed657600080fd5b8235905067ffffffffffffffff811115610eef57600080fd5b602083019150836020820283011115610f0757600080fd5b9250929050565b600081519050610f1d816119ca565b92915050565b600081359050610f32816119e1565b92915050565b600082601f830112610f4957600080fd5b8135610f59848260208601610e1e565b91505092915050565b600082601f830112610f7357600080fd5b8135610f83848260208601610e5c565b91505092915050565b600081359050610f9b816119f8565b92915050565b600081519050610fb0816119f8565b92915050565b600060208284031215610fc857600080fd5b6000610fd684828501610eaf565b91505092915050565b60008060008060808587031215610ff557600080fd5b600061100387828801610e9a565b945050602061101487828801610e9a565b935050604061102587828801610f8c565b925050606085013567ffffffffffffffff81111561104257600080fd5b61104e87828801610f38565b91505092959194509250565b6000806000806080858703121561107057600080fd5b600061107e87828801610e9a565b945050602061108f87828801610e9a565b93505060406110a087828801610f8c565b925050606085013567ffffffffffffffff8111156110bd57600080fd5b6110c987828801610f62565b91505092959194509250565b600080604083850312156110e857600080fd5b60006110f685828601610e9a565b925050602061110785828601610f8c565b9150509250929050565b6000806000806060858703121561112757600080fd5b600061113587828801610e9a565b945050602061114687828801610f8c565b935050604085013567ffffffffffffffff81111561116357600080fd5b61116f87828801610ec4565b925092505092959194509250565b60006020828403121561118f57600080fd5b600061119d84828501610f0e565b91505092915050565b600080604083850312156111b957600080fd5b60006111c785828601610f23565b92505060206111d885828601610f8c565b9150509250929050565b6000602082840312156111f457600080fd5b600061120284828501610fa1565b91505092915050565b6112148161168c565b82525050565b61122b6112268261168c565b6117f8565b82525050565b61123a8161169e565b82525050565b611249816116aa565b82525050565b61126061125b826116aa565b61180a565b82525050565b61126f816116b4565b82525050565b6000611280826115fe565b61128a8185611614565b935061129a818560208601611719565b6112a38161191d565b840191505092915050565b60006112b982611609565b6112c38185611625565b93506112d3818560208601611719565b6112dc8161191d565b840191505092915050565b60006112f4602e83611625565b91506112ff8261193b565b604082019050919050565b6000611317601f83611625565b91506113228261198a565b602082019050919050565b61133681611700565b82525050565b61134d61134882611700565b611826565b82525050565b600061135f828561121a565b60148201915061136f828461133c565b6020820191508190509392505050565b600061138b828561124f565b60208201915061139b828461133c565b6020820191508190509392505050565b60006020820190506113c0600083018461120b565b92915050565b60006060820190506113db600083018661120b565b6113e8602083018561120b565b6113f5604083018461132d565b949350505050565b6000606082019050611412600083018661120b565b61141f602083018561132d565b81810360408301526114318184611275565b9050949350505050565b60006020820190506114506000830184611231565b92915050565b600060208201905061146b6000830184611240565b92915050565b60006040820190506114866000830185611240565b611493602083018461132d565b9392505050565b60006080820190506114af6000830187611240565b6114bc602083018661132d565b6114c9604083018561120b565b6114d6606083018461132d565b95945050505050565b60006020820190506114f46000830184611266565b92915050565b6000602082019050818103600083015261151481846112ae565b905092915050565b60006020820190508181036000830152611535816112e7565b9050919050565b600060208201905081810360008301526115558161130a565b9050919050565b6000602082019050611571600083018461132d565b92915050565b6000611581611592565b905061158d828261177e565b919050565b6000604051905090565b600067ffffffffffffffff8211156115b7576115b66118ee565b5b6115c08261191d565b9050602081019050919050565b600067ffffffffffffffff8211156115e8576115e76118ee565b5b6115f18261191d565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061164182611700565b915061164c83611700565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561168157611680611861565b5b828201905092915050565b6000611697826116e0565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561173757808201518184015260208101905061171c565b83811115611746576000848401525b50505050565b6000600282049050600182168061176457607f821691505b60208210811415611778576117776118bf565b5b50919050565b6117878261191d565b810181811067ffffffffffffffff821117156117a6576117a56118ee565b5b80604052505050565b60006117ba82611700565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117ed576117ec611861565b5b600182019050919050565b600061180382611814565b9050919050565b6000819050919050565b600061181f8261192e565b9050919050565b6000819050919050565b600061183b82611700565b915061184683611700565b92508261185657611855611890565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00600082015250565b6119bc8161168c565b81146119c757600080fd5b50565b6119d38161169e565b81146119de57600080fd5b50565b6119ea816116aa565b81146119f557600080fd5b50565b611a0181611700565b8114611a0c57600080fd5b5056fea26469706673582212206ff0448785a143fe67e94e474e5eb8bae451972fc3606d09d6a6d66c95a64c0964736f6c63430008040033";

export class Raffle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vrfCoordinator: string,
    _vrfKeyHash: BytesLike,
    _linkToken: string,
    _linkFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Raffle> {
    return super.deploy(
      _vrfCoordinator,
      _vrfKeyHash,
      _linkToken,
      _linkFee,
      overrides || {}
    ) as Promise<Raffle>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _vrfKeyHash: BytesLike,
    _linkToken: string,
    _linkFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _vrfKeyHash,
      _linkToken,
      _linkFee,
      overrides || {}
    );
  }
  attach(address: string): Raffle {
    return super.attach(address) as Raffle;
  }
  connect(signer: Signer): Raffle__factory {
    return super.connect(signer) as Raffle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RaffleInterface {
    return new utils.Interface(_abi) as RaffleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Raffle {
    return new Contract(address, _abi, signerOrProvider) as Raffle;
  }
}
