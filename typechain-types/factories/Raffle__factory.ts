/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Raffle, RaffleInterface } from "../Raffle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_vrfKeyHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_linkFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_winnerIdx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_list",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_listSize",
        type: "uint256",
      },
    ],
    name: "Finalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "winner",
        type: "uint256",
      },
    ],
    name: "WinnerDrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_winner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_winnerIdx",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "draw",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "drawn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_list",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_listSize",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "initWithNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "linkFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "list",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_participant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "merkleLeafForListItem",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001aca38038062001aca833981810160405281019062000038919062000109565b83828173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050508260c081815250508060e08181525050505050506200020b565b600081519050620000d581620001bd565b92915050565b600081519050620000ec81620001d7565b92915050565b6000815190506200010381620001f1565b92915050565b600080600080608085870312156200012057600080fd5b60006200013087828801620000c4565b94505060206200014387828801620000db565b93505060406200015687828801620000c4565b92505060606200016987828801620000f2565b91505092959194509250565b6000620001828262000193565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620001c88162000175565b8114620001d457600080fd5b50565b620001e28162000189565b8114620001ee57600080fd5b50565b620001fc81620001b3565b81146200020857600080fd5b50565b60805160601c60a05160601c60c05160e05161186362000267600039600081816102da0152818161039f01526104980152600061047701526000818161066a0152610a8c0152600081816103c00152610a5001526118636000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063972c535611610097578063e9812d7111610066578063e9812d7114610262578063f851a4401461027e578063fc0c546a1461029c578063fd915ef2146102ba576100f5565b8063972c5356146101ec578063af640d0f1461020a578063c1aaba9e14610228578063dfbf53ae14610244576100f5565b80630f560cd7116100d35780630f560cd714610166578063150b7a02146101845780633d13f874146101b457806394985ddd146101d0576100f5565b806301889611146100fa57806306fd2e7a146101185780630eecae2114610148575b600080fd5b6101026102d8565b60405161010f9190611417565b60405180910390f35b610132600480360381019061012d9190610fa6565b6102fc565b60405161013f9190611333565b60405180910390f35b61015061032f565b60405161015d9190611333565b60405180910390f35b61016e6104c1565b60405161017b9190611333565b60405180910390f35b61019e60048036038101906101999190610f2b565b6104c7565b6040516101ab91906113bc565b60405180910390f35b6101ce60048036038101906101c99190610fe2565b6104db565b005b6101ea60048036038101906101e59190611077565b610668565b005b6101f4610704565b6040516102019190611417565b60405180910390f35b61021261070a565b60405161021f9190611417565b60405180910390f35b610242600480360381019061023d9190610edc565b610710565b005b61024c61093e565b6040516102599190611417565b60405180910390f35b61027c60048036038101906102779190611077565b610944565b005b6102866109ed565b6040516102939190611243565b60405180910390f35b6102a4610a13565b6040516102b19190611243565b60405180910390f35b6102c2610a39565b6040516102cf9190611318565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600082826040516020016103119291906111eb565b60405160208183030381529060405280519060200120905092915050565b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038b57600080fd5b6000801b600454141561039d57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104179190611243565b60206040518083038186803b15801561042f57600080fd5b505afa158015610443573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046791906110b3565b101561047257600080fd5b6104bc7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a4c565b905090565b60045481565b600063150b7a0260e01b9050949350505050565b600760009054906101000a900460ff166104f457600080fd5b600061050085856102fc565b90506000610552848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060045484610bab565b90508061055e57600080fd5b600654851461056c57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e30886003546040518463ffffffff1660e01b81526004016105cd9392919061125e565b600060405180830381600087803b1580156105e757600080fd5b505af11580156105fb573d6000803e3d6000fd5b505050507f8dab6d35466ca3cba614bc5b262979b277949786977e81107f375f7e39f7734a8686600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040516106589493929190611295565b60405180910390a1505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ed906113f7565b60405180910390fd5b6107008282610bc2565b5050565b60055481565b60035481565b60018054906101000a900460ff1661073857600160009054906101000a900460ff1615610741565b610740610c2e565b5b610780576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610777906113d7565b60405180910390fd5b600060018054906101000a900460ff1615905080156107ce5760018060016101000a81548160ff02191690831515021790555060018060006101000a81548160ff0219169083151502179055505b83600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816003819055503073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016108a79190611417565b60206040518083038186803b1580156108bf57600080fd5b505afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190610eb3565b73ffffffffffffffffffffffffffffffffffffffff161461091757600080fd5b80156109385760006001806101000a81548160ff0219169083151502179055505b50505050565b60065481565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461099e57600080fd5b81600481905550806005819055507fdc254c2f4c0256f1dbcdc461e17730da5bb7b777632b4f0cf574121de971c67b6004546005546040516109e192919061134e565b60405180910390a15050565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900460ff1681565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610ac092919061134e565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610aed939291906112da565b602060405180830381600087803b158015610b0757600080fd5b505af1158015610b1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3f919061104e565b506000610b618460003060008089815260200190815260200160002054610c3f565b9050600160008086815260200190815260200160002054610b8291906114b5565b60008086815260200190815260200160002081905550610ba28482610c7b565b91505092915050565b600082610bb88584610cae565b1490509392505050565b60055481610bd0919061167d565b6006819055506001600760006101000a81548160ff0219169083151502179055507fb042a90651658833ced064b7e52c96f0dbcb36278e6dac9c37178e6612b9ed4e600654604051610c229190611417565b60405180910390a15050565b6000610c3930610d49565b15905090565b600084848484604051602001610c589493929190611377565b6040516020818303038152906040528051906020012060001c9050949350505050565b60008282604051602001610c90929190611217565b60405160208183030381529060405280519060200120905092915050565b60008082905060005b8451811015610d3e576000858281518110610cfb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050808311610d1d57610d168382610d6c565b9250610d2a565b610d278184610d6c565b92505b508080610d36906115fc565b915050610cb7565b508091505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082600052816020526040600020905092915050565b6000610d96610d9184611457565b611432565b905082815260208101848484011115610dae57600080fd5b610db9848285611589565b509392505050565b600081359050610dd0816117d1565b92915050565b600081519050610de5816117d1565b92915050565b60008083601f840112610dfd57600080fd5b8235905067ffffffffffffffff811115610e1657600080fd5b602083019150836020820283011115610e2e57600080fd5b9250929050565b600081519050610e44816117e8565b92915050565b600081359050610e59816117ff565b92915050565b600082601f830112610e7057600080fd5b8135610e80848260208601610d83565b91505092915050565b600081359050610e9881611816565b92915050565b600081519050610ead81611816565b92915050565b600060208284031215610ec557600080fd5b6000610ed384828501610dd6565b91505092915050565b600080600060608486031215610ef157600080fd5b6000610eff86828701610dc1565b9350506020610f1086828701610dc1565b9250506040610f2186828701610e89565b9150509250925092565b60008060008060808587031215610f4157600080fd5b6000610f4f87828801610dc1565b9450506020610f6087828801610dc1565b9350506040610f7187828801610e89565b925050606085013567ffffffffffffffff811115610f8e57600080fd5b610f9a87828801610e5f565b91505092959194509250565b60008060408385031215610fb957600080fd5b6000610fc785828601610dc1565b9250506020610fd885828601610e89565b9150509250929050565b60008060008060608587031215610ff857600080fd5b600061100687828801610dc1565b945050602061101787828801610e89565b935050604085013567ffffffffffffffff81111561103457600080fd5b61104087828801610deb565b925092505092959194509250565b60006020828403121561106057600080fd5b600061106e84828501610e35565b91505092915050565b6000806040838503121561108a57600080fd5b600061109885828601610e4a565b92505060206110a985828601610e89565b9150509250929050565b6000602082840312156110c557600080fd5b60006110d384828501610e9e565b91505092915050565b6110e58161150b565b82525050565b6110fc6110f78261150b565b611645565b82525050565b61110b8161151d565b82525050565b61111a81611529565b82525050565b61113161112c82611529565b611657565b82525050565b61114081611533565b82525050565b600061115182611488565b61115b8185611493565b935061116b818560208601611598565b6111748161173b565b840191505092915050565b600061118c602e836114a4565b915061119782611759565b604082019050919050565b60006111af601f836114a4565b91506111ba826117a8565b602082019050919050565b6111ce8161157f565b82525050565b6111e56111e08261157f565b611673565b82525050565b60006111f782856110eb565b60148201915061120782846111d4565b6020820191508190509392505050565b60006112238285611120565b60208201915061123382846111d4565b6020820191508190509392505050565b600060208201905061125860008301846110dc565b92915050565b600060608201905061127360008301866110dc565b61128060208301856110dc565b61128d60408301846111c5565b949350505050565b60006080820190506112aa60008301876110dc565b6112b760208301866111c5565b6112c460408301856110dc565b6112d160608301846111c5565b95945050505050565b60006060820190506112ef60008301866110dc565b6112fc60208301856111c5565b818103604083015261130e8184611146565b9050949350505050565b600060208201905061132d6000830184611102565b92915050565b60006020820190506113486000830184611111565b92915050565b60006040820190506113636000830185611111565b61137060208301846111c5565b9392505050565b600060808201905061138c6000830187611111565b61139960208301866111c5565b6113a660408301856110dc565b6113b360608301846111c5565b95945050505050565b60006020820190506113d16000830184611137565b92915050565b600060208201905081810360008301526113f08161117f565b9050919050565b60006020820190508181036000830152611410816111a2565b9050919050565b600060208201905061142c60008301846111c5565b92915050565b600061143c61144d565b905061144882826115cb565b919050565b6000604051905090565b600067ffffffffffffffff8211156114725761147161170c565b5b61147b8261173b565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006114c08261157f565b91506114cb8361157f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611500576114ff6116ae565b5b828201905092915050565b60006115168261155f565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156115b657808201518184015260208101905061159b565b838111156115c5576000848401525b50505050565b6115d48261173b565b810181811067ffffffffffffffff821117156115f3576115f261170c565b5b80604052505050565b60006116078261157f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561163a576116396116ae565b5b600182019050919050565b600061165082611661565b9050919050565b6000819050919050565b600061166c8261174c565b9050919050565b6000819050919050565b60006116888261157f565b91506116938361157f565b9250826116a3576116a26116dd565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00600082015250565b6117da8161150b565b81146117e557600080fd5b50565b6117f18161151d565b81146117fc57600080fd5b50565b61180881611529565b811461181357600080fd5b50565b61181f8161157f565b811461182a57600080fd5b5056fea26469706673582212206f090cea7393d26b2b3f83815d51e22b1bb97875bdf625e4d23382491237df7764736f6c63430008040033";

export class Raffle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vrfCoordinator: string,
    _vrfKeyHash: BytesLike,
    _linkToken: string,
    _linkFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Raffle> {
    return super.deploy(
      _vrfCoordinator,
      _vrfKeyHash,
      _linkToken,
      _linkFee,
      overrides || {}
    ) as Promise<Raffle>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _vrfKeyHash: BytesLike,
    _linkToken: string,
    _linkFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _vrfKeyHash,
      _linkToken,
      _linkFee,
      overrides || {}
    );
  }
  attach(address: string): Raffle {
    return super.attach(address) as Raffle;
  }
  connect(signer: Signer): Raffle__factory {
    return super.connect(signer) as Raffle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RaffleInterface {
    return new utils.Interface(_abi) as RaffleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Raffle {
    return new Contract(address, _abi, signerOrProvider) as Raffle;
  }
}
